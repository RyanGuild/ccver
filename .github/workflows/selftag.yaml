name: Auto Tag

on:
  workflow_call:
    outputs:
      version: 
        value: ${{ jobs.tag.outputs.version }}
        description: 'The version of the source code'

concurrency: tags

permissions: 
  contents: write

jobs:
  tag:
    name: 🏷️ Create Tag
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      version: ${{ steps.get_version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    
    - name: Get Rust Cache
      uses: ./.github/actions/rust_depcache
      with:
        runner: ubuntu-latest
        arch: x86_64-unknown-linux-gnu
        rust: nightly
    
    - name: Get Version
      id: get_version
      run: |
        # Build and run the project to get the version
        cargo build --quiet
        VERSION=$(cargo run | tr -d '\n')
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
    
    - name: Get ChangeLog
      id: get_changelog
      run: |
        # Get the changelog
        CHANGELOG=$(cargo run -- change-log | tr -d '\n')
        echo "changelog=$CHANGELOG" >> "$GITHUB_OUTPUT"
    
    - name: Create and Push Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION="${{ steps.get_version.outputs.version }}"
        CHANGELOG="${{ steps.get_changelog.outputs.changelog }}"
        
        # Check if tag already exists
        if ! git rev-parse "$VERSION" >/dev/null 2>&1; then
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          echo "Creating new tag $VERSION"
          git tag -a $VERSION -m $CHANGELOG
          git push origin "$VERSION"
        else
          echo "Tag $VERSION already exists, skipping"
        fi
